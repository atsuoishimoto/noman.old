{
  "id": "msg_019f39eKFgvgh6ThYT4c1fdM",
  "content": [
    {
      "text": "# cp command\n\nCopy files and directories from source to destination.\n\n## Overview\n\nThe `cp` command copies files and directories. It can copy a single file to another file, multiple files to a directory, or entire directory structures. By default, `cp` will not overwrite existing files unless forced with options, and it preserves the original file's timestamps and permissions.\n\n## Options\n\n### **-r, -R, --recursive**\n\nCopy directories recursively, including all subdirectories and their contents.\n\n```console\n$ cp -r Documents/ Backup/\n```\n\n### **-i, --interactive**\n\nPrompt before overwriting existing files.\n\n```console\n$ cp -i file.txt destination/\ncp: overwrite 'destination/file.txt'? y\n```\n\n### **-f, --force**\n\nForce the copy by removing the destination file if needed, without prompting.\n\n```console\n$ cp -f important.txt destination/\n```\n\n### **-p, --preserve**\n\nPreserve file attributes like mode, ownership, and timestamps.\n\n```console\n$ cp -p config.ini backup/\n```\n\n### **-v, --verbose**\n\nDisplay the name of each file being copied.\n\n```console\n$ cp -v *.txt Documents/\n'file1.txt' -> 'Documents/file1.txt'\n'file2.txt' -> 'Documents/file2.txt'\n```\n\n### **-u, --update**\n\nCopy only when the source file is newer than the destination file or when the destination file is missing.\n\n```console\n$ cp -u *.log archive/\n```\n\n### **-a, --archive**\n\nPreserve all file attributes and copy directories recursively (equivalent to -dR --preserve=all).\n\n```console\n$ cp -a source_dir/ destination_dir/\n```\n\n## Usage Examples\n\n### Copying a Single File\n\n```console\n$ cp report.pdf ~/Documents/\n```\n\n### Copying Multiple Files to a Directory\n\n```console\n$ cp file1.txt file2.txt file3.txt ~/Backup/\n```\n\n### Copying a Directory with All Contents\n\n```console\n$ cp -r Projects/ ~/Backup/Projects/\n```\n\n### Copying with Verbose Output and Preservation\n\n```console\n$ cp -vp important.conf /etc/\n'important.conf' -> '/etc/important.conf'\n```\n\n## Tips:\n\n### Use Wildcards for Multiple Files\n\nUse wildcards to copy multiple files matching a pattern:\n```console\n$ cp *.jpg ~/Pictures/\n```\n\n### Backup Before Overwriting\n\nCreate backups of existing files by using the `-b` option:\n```console\n$ cp -b config.ini /etc/\n```\nThis creates a backup file named `config.ini~` before overwriting.\n\n### Copy Only If Newer\n\nUse `-u` to update files only if the source is newer than the destination:\n```console\n$ cp -u -r source_dir/ destination_dir/\n```\nThis is useful for synchronizing directories.\n\n### Preserve Symbolic Links\n\nUse `-d` or `--no-dereference` to preserve symbolic links as links rather than copying the files they point to:\n```console\n$ cp -d link.txt destination/\n```\n\n## Frequently Asked Questions\n\n#### Q1. How do I copy a file without overwriting an existing file?\nA. Use `cp -n source destination` where the `-n` option prevents overwriting existing files.\n\n#### Q2. How do I copy hidden files?\nA. Hidden files (starting with `.`) are copied normally. To copy all files including hidden ones, use wildcards like `cp -r source/. destination/`.\n\n#### Q3. How do I copy a file and maintain its permissions?\nA. Use `cp -p source destination` to preserve mode, ownership, and timestamps.\n\n#### Q4. How do I copy a directory with all its contents?\nA. Use `cp -r source_directory destination_directory` to recursively copy the directory and all its contents.\n\n#### Q5. How do I copy only specific file types from a directory?\nA. Use wildcards: `cp source_directory/*.txt destination_directory/` to copy only text files.\n\n## References\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 1001
  }
}