{
  "id": "msg_01R1q2FdkLesTCo1rWmDXGeB",
  "content": [
    {
      "text": "# lsof command\n\nLists open files and the processes that opened them.\n\n## Overview\n\n`lsof` (list open files) displays information about files that are currently open by processes running on the system. It can show which processes have a particular file open, which files a specific process has open, network connections, and more. This command is invaluable for system troubleshooting, security monitoring, and understanding system resource usage.\n\n## Options\n\n### **-p PID**\n\nLists all files opened by the specified process ID.\n\n```console\n$ lsof -p 1234\nCOMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nbash     1234   user  cwd    DIR    8,1     4096 123456 /home/user\nbash     1234   user  txt    REG    8,1   940336 789012 /usr/bin/bash\n```\n\n### **-i**\n\nLists files associated with Internet connections (network files).\n\n```console\n$ lsof -i\nCOMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nchrome   1234   user   52u  IPv4  12345      0t0  TCP localhost:49152->localhost:http (ESTABLISHED)\nsshd     5678   root    3u  IPv4  23456      0t0  TCP *:ssh (LISTEN)\n```\n\n### **-i:[port]**\n\nLists files associated with the specified port.\n\n```console\n$ lsof -i:22\nCOMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nsshd    1234 root    3u  IPv4  12345      0t0  TCP *:ssh (LISTEN)\n```\n\n### **-u username**\n\nLists files opened by a specific user.\n\n```console\n$ lsof -u john\nCOMMAND  PID   USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nbash    1234   john  cwd    DIR    8,1     4096 123456 /home/john\nchrome  2345   john   10r   REG    8,1    12345 234567 /home/john/Downloads/file.pdf\n```\n\n### **-c command**\n\nLists files opened by processes with the specified command name.\n\n```console\n$ lsof -c chrome\nCOMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nchrome   1234   user  cwd    DIR    8,1     4096 123456 /home/user\nchrome   1234   user  txt    REG    8,1 12345678 234567 /opt/google/chrome/chrome\n```\n\n### **-t**\n\nDisplays only process IDs, useful for scripting.\n\n```console\n$ lsof -t -i:80\n1234\n5678\n```\n\n### **+D directory**\n\nLists all open files in the specified directory and its subdirectories.\n\n```console\n$ lsof +D /var/log\nCOMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nrsyslogd 123 root    5w   REG    8,1    12345 123456 /var/log/syslog\nnginx   1234 www     3w   REG    8,1     5678 234567 /var/log/nginx/access.log\n```\n\n## Usage Examples\n\n### Finding which process is using a specific file\n\n```console\n$ lsof /var/log/syslog\nCOMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nrsyslogd 123 root    5w   REG    8,1    12345 123456 /var/log/syslog\n```\n\n### Finding which process is listening on a specific port\n\n```console\n$ lsof -i TCP:80\nCOMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nnginx   1234 root    6u  IPv4  12345      0t0  TCP *:http (LISTEN)\n```\n\n### Combining multiple options\n\n```console\n$ lsof -u john -c chrome -i TCP\nCOMMAND  PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nchrome  1234  john   52u  IPv4  12345      0t0  TCP localhost:49152->server:https (ESTABLISHED)\nchrome  1234  john   60u  IPv4  23456      0t0  TCP localhost:49153->cdn:https (ESTABLISHED)\n```\n\n## Tips\n\n### Finding Processes Using Deleted Files\n\nWhen a process has a file open that has been deleted, you can find it with `lsof | grep deleted`. This is useful for reclaiming disk space by restarting processes holding onto deleted files.\n\n### Monitoring Network Connections\n\nUse `lsof -i -P -n` to show all network connections with numeric ports and IP addresses. The `-P` prevents port number to service name conversion, and `-n` prevents hostname lookups.\n\n### Finding Memory-Mapped Files\n\nUse `lsof -a -p PID -d mem` to see memory-mapped files for a specific process, which can help understand memory usage patterns.\n\n### Continuous Monitoring\n\nUse `lsof -r 2` to repeat the listing every 2 seconds, which is useful for monitoring changing file usage patterns.\n\n## Frequently Asked Questions\n\n#### Q1. How do I find which process is using a specific port?\nA. Use `lsof -i:PORT_NUMBER` (e.g., `lsof -i:80` for HTTP port).\n\n#### Q2. How can I see all network connections?\nA. Use `lsof -i` to see all network connections, or `lsof -i TCP` for TCP connections only.\n\n#### Q3. How do I find all files opened by a specific user?\nA. Use `lsof -u USERNAME` to list all files opened by a specific user.\n\n#### Q4. How can I find which processes are accessing a specific directory?\nA. Use `lsof +D /path/to/directory` to list all processes accessing files in that directory.\n\n#### Q5. How do I find which process is using a specific file?\nA. Simply run `lsof /path/to/file` to see which process has that file open.\n\n## macOS Considerations\n\nOn macOS, `lsof` behavior may differ slightly from Linux versions:\n- The output format might have minor differences\n- Some options like `+D` might be slower on macOS due to filesystem differences\n- For network connections, consider using `lsof -i -P` as macOS tends to resolve service names by default\n\n## References\n\nhttps://www.freebsd.org/cgi/man.cgi?query=lsof\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1634,
    "output_tokens": 1606
  }
}