{
  "id": "msg_01ERBSci6DstvfyB5akj6qqD",
  "content": [
    {
      "text": "# su command\n\nSwitch user identity or become another user.\n\n## Overview\n\nThe `su` command allows users to temporarily become another user during a login session. By default, it switches to the superuser (root) when no username is specified. It creates a new shell with the target user's environment variables and permissions.\n\n## Options\n\n### **-**, **-l**, **--login**\n\nProvide a login environment, simulating a direct login as the target user. This includes setting environment variables, changing to the target user's home directory, and running login scripts.\n\n```console\n$ su - john\nPassword: \njohn@hostname:~$\n```\n\n### **-c**, **--command=COMMAND**\n\nExecute a single command as the specified user and then exit.\n\n```console\n$ su -c \"ls -la /root\" root\nPassword: \ntotal 28\ndrwx------  4 root root 4096 May  5 10:15 .\ndrwxr-xr-x 20 root root 4096 May  5 10:15 ..\n-rw-------  1 root root  571 May  5 10:15 .bash_history\n-rw-r--r--  1 root root 3106 May  5 10:15 .bashrc\ndrwx------  2 root root 4096 May  5 10:15 .cache\n-rw-r--r--  1 root root  161 May  5 10:15 .profile\ndrwx------  2 root root 4096 May  5 10:15 .ssh\n```\n\n### **-s**, **--shell=SHELL**\n\nRun the specified shell instead of the default shell for the target user.\n\n```console\n$ su -s /bin/zsh john\nPassword: \njohn@hostname:~$\n```\n\n### **-p**, **--preserve-environment**\n\nPreserve the current environment variables instead of switching to the target user's environment.\n\n```console\n$ su -p john\nPassword: \njohn@hostname:/current/directory$\n```\n\n## Usage Examples\n\n### Becoming the root user\n\n```console\n$ su\nPassword: \nroot@hostname:/home/user#\n```\n\n### Running a command as root and returning to normal user\n\n```console\n$ su -c \"apt update && apt upgrade\" root\nPassword: \n[apt update and upgrade output]\n$\n```\n\n### Switching to another user with login environment\n\n```console\n$ su - john\nPassword: \njohn@hostname:~$\n```\n\n## Tips:\n\n### Use sudo instead when possible\n\nModern systems often prefer `sudo` over `su` for administrative tasks as it provides better logging and more granular permission control.\n\n### Be careful with environment variables\n\nWhen using `su` without the `-` option, you keep your current environment variables, which might cause unexpected behavior. Use `-` for a clean environment.\n\n### Exit the su session properly\n\nType `exit` or press Ctrl+D to return to your original user session when finished with the elevated privileges.\n\n### Check before running commands as root\n\nAlways double-check commands before executing them as root, as mistakes can damage your system.\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `su` and `sudo`?\nA. `su` switches your entire user session to another user (typically root), while `sudo` executes just one command with elevated privileges and then returns to your normal user.\n\n#### Q2. Why does `su` ask for a password?\nA. `su` requires the password of the target user you're switching to, not your own password (unlike `sudo` which asks for your password).\n\n#### Q3. How do I exit from an `su` session?\nA. Type `exit` or press Ctrl+D to return to your original user session.\n\n#### Q4. Why use `su -` instead of just `su`?\nA. `su -` provides a complete login environment of the target user, including their environment variables, working directory, and shell configuration. Plain `su` only changes the user ID but keeps your current environment.\n\n## References\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/su-invocation.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1690,
    "output_tokens": 983
  }
}