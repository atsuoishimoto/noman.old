{
  "id": "msg_012CwdvfP19xiAGKNHex4Boq",
  "content": [
    {
      "text": "# systemctl コマンド\n\nsystemdシステムとサービスマネージャーを制御します。\n\n## 概要\n\n`systemctl` は、systemdシステムとサービスマネージャーを制御・管理するためのコマンドラインユーティリティです。システムサービスの起動、停止、再起動、有効化、無効化、状態確認などを行うことができます。これは、ほとんどの最新のLinuxディストリビューションで使用されているinitシステムおよびサービスマネージャーであるsystemdと対話するための主要なツールです。\n\n## オプション\n\n### **status**\n\n1つ以上のユニットの実行時状態を表示します\n\n```console\n$ systemctl status nginx\n● nginx.service - A high performance web server and a reverse proxy server\n   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\n   Active: active (running) since Mon 2025-05-05 10:15:30 UTC; 2h 30min ago\n     Docs: man:nginx(8)\n  Process: 1234 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n  Process: 1235 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n Main PID: 1236 (nginx)\n    Tasks: 2 (limit: 4915)\n   Memory: 3.0M\n   CGroup: /system.slice/nginx.service\n           ├─1236 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n           └─1237 nginx: worker process\n```\n\n### **start**\n\n1つ以上のユニットを起動（アクティブ化）します\n\n```console\n$ sudo systemctl start nginx\n```\n\n### **stop**\n\n1つ以上のユニットを停止（非アクティブ化）します\n\n```console\n$ sudo systemctl stop nginx\n```\n\n### **restart**\n\n1つ以上のユニットを再起動します\n\n```console\n$ sudo systemctl restart nginx\n```\n\n### **reload**\n\n1つ以上のユニットを再読み込みします\n\n```console\n$ sudo systemctl reload nginx\n```\n\n### **enable**\n\n1つ以上のユニットをブート時に起動するよう有効化します\n\n```console\n$ sudo systemctl enable nginx\nCreated symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /lib/systemd/system/nginx.service.\n```\n\n### **disable**\n\n1つ以上のユニットがブート時に起動しないよう無効化します\n\n```console\n$ sudo systemctl disable nginx\nRemoved /etc/systemd/system/multi-user.target.wants/nginx.service.\n```\n\n### **is-active**\n\nユニットがアクティブかどうかを確認します\n\n```console\n$ systemctl is-active nginx\nactive\n```\n\n### **is-enabled**\n\nユニットが有効かどうかを確認します\n\n```console\n$ systemctl is-enabled nginx\nenabled\n```\n\n### **list-units**\n\n読み込まれているユニットを一覧表示します\n\n```console\n$ systemctl list-units\nUNIT                                      LOAD   ACTIVE SUB     DESCRIPTION\nproc-sys-fs-binfmt_misc.automount         loaded active waiting Arbitrary Executable File Formats File System\nsys-devices-pci0000:00-0000:00:02.0-drm-card0-card0\\x2dDP\\x2d1-intel_backlight.device loaded active plugged /sys/devices/pci0000:00/0000:00:02.0/drm/card0/card0-DP-1/intel_backlight\nsys-devices-platform-serial8250-tty-ttyS0.device loaded active plugged /sys/devices/platform/serial8250/tty/ttyS0\n...\n```\n\n### **--type=TYPE**\n\n特定のタイプのユニットを一覧表示します\n\n```console\n$ systemctl --type=service\nUNIT                               LOAD   ACTIVE SUB     DESCRIPTION\naccounts-daemon.service            loaded active running Accounts Service\napparmor.service                   loaded active exited  AppArmor initialization\napport.service                     loaded active exited  LSB: automatic crash report generation\n...\n```\n\n### **daemon-reload**\n\nsystemdマネージャーの設定を再読み込みします\n\n```console\n$ sudo systemctl daemon-reload\n```\n\n## 使用例\n\n### 特定のサービスの状態を確認する\n\n```console\n$ systemctl status ssh\n● ssh.service - OpenBSD Secure Shell server\n   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)\n   Active: active (running) since Mon 2025-05-05 09:45:23 UTC; 3h 10min ago\n  Process: 1122 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)\n Main PID: 1123 (sshd)\n    Tasks: 1 (limit: 4915)\n   Memory: 5.6M\n   CGroup: /system.slice/ssh.service\n           └─1123 /usr/sbin/sshd -D\n```\n\n### サービスを再起動してその状態を確認する\n\n```console\n$ sudo systemctl restart nginx && systemctl status nginx\n● nginx.service - A high performance web server and a reverse proxy server\n   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\n   Active: active (running) since Mon 2025-05-05 13:05:45 UTC; 2s ago\n     Docs: man:nginx(8)\n  Process: 5678 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n  Process: 5679 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n Main PID: 5680 (nginx)\n    Tasks: 2 (limit: 4915)\n   Memory: 2.8M\n   CGroup: /system.slice/nginx.service\n           ├─5680 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n           └─5681 nginx: worker process\n```\n\n### 失敗したすべてのサービスを一覧表示する\n\n```console\n$ systemctl list-units --state=failed\nUNIT                  LOAD   ACTIVE SUB    DESCRIPTION\nmysql.service         loaded failed failed MySQL Database Server\nopenvpn.service       loaded failed failed OpenVPN service\n```\n\n## ヒント:\n\n### タブ補完を使用する\n\nSystemctlはサービス名のタブ補完をサポートしており、正確な名前を覚えていなくてもサービスを簡単に管理できます。\n\n### サービスログを確認する\n\nサービスのトラブルシューティングを行う場合は、`journalctl -u サービス名`を使用して、そのサービスに固有のログを表示します。\n\n### サービスをマスクする\n\nサービスが（手動でも）起動されないようにするには、`systemctl mask サービス名`を使用します。これにより/dev/nullへのシンボリックリンクが作成され、`systemctl unmask サービス名`でマスク解除されるまでサービスを起動できなくなります。\n\n### サービスの依存関係を表示する\n\n`systemctl list-dependencies サービス名`を使用して、特定のサービスが依存している他のサービスを確認します。\n\n### システム状態を管理する\n\nサービス以外にも、systemctlはシステムの再起動（`systemctl reboot`）、電源オフ（`systemctl poweroff`）、サスペンド（`systemctl suspend`）などのシステム状態を管理できます。\n\n## よくある質問\n\n#### Q1. `systemctl stop`と`systemctl disable`の違いは何ですか？\nA. `systemctl stop`は実行中のサービスを即座に停止しますが、ブート時の動作は変更しません。`systemctl disable`はサービスがブート時に自動的に起動しないようにしますが、現在実行中のサービスには影響しません。\n\n#### Q2. サービス設定の変更を反映するにはどうすればよいですか？\nA. サービスファイルを変更した後、`sudo systemctl daemon-reload`を実行してsystemdマネージャーの設定を再読み込みし、その後`sudo systemctl restart サービス名`でサービスを再起動します。\n\n#### Q3. 利用可能なすべてのサービスを確認するにはどうすればよいですか？\nA. `systemctl list-unit-files --type=service`を使用して、利用可能なすべてのサービスユニットファイルとその状態を確認できます。\n\n#### Q4. カスタムsystemdサービスを作成するにはどうすればよいですか？\nA. /etc/systemd/system/に.serviceファイルを作成し、`systemctl daemon-reload`を実行して登録し、`systemctl enable`でブート時に有効化します。\n\n#### Q5. サービスの「masked」ステータスとは何ですか？\nA. マスクされたサービスは、手動でも自動でも完全に起動が防止されています。これは「無効化」よりも強力な形式であり、サービスファイルから/dev/nullへのシンボリックリンクを作成することで実現されます。\n\n## 参考文献\n\nhttps://www.freedesktop.org/software/systemd/man/systemctl.html\n\n## 改訂履歴\n\n- 2025/05/05 初版",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 2186,
    "output_tokens": 2660
  }
}