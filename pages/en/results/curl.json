{
  "id": "msg_01995xMdduxADvs1KkVhB5fN",
  "content": [
    {
      "text": "# curl command\n\nTransfer data from or to a server using various protocols.\n\n## Overview\n\n`curl` is a command-line tool for transferring data with URLs using various protocols (HTTP, HTTPS, FTP, SFTP, SCP, etc.). It's designed to work without user interaction and can be used for downloading files, API requests, testing endpoints, and more. `curl` supports numerous options for customizing requests, handling authentication, and controlling data transfer.\n\n## Options\n\n### **-o, --output \\<file\\>**\n\nWrite output to a file instead of stdout.\n\n```console\n$ curl -o example.html https://example.com\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  1256  100  1256    0     0   7503      0 --:--:-- --:--:-- --:--:--  7503\n```\n\n### **-O, --remote-name**\n\nWrite output to a local file named like the remote file.\n\n```console\n$ curl -O https://example.com/file.zip\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 10.2M  100 10.2M    0     0  5.1M      0  0:00:02  0:00:02 --:--:-- 5.1M\n```\n\n### **-s, --silent**\n\nSilent or quiet mode, don't show progress meter or error messages.\n\n```console\n$ curl -s https://example.com > example.html\n```\n\n### **-I, --head**\n\nFetch the HTTP headers only.\n\n```console\n$ curl -I https://example.com\nHTTP/2 200 \ncontent-type: text/html; charset=UTF-8\ndate: Mon, 05 May 2025 12:00:00 GMT\nexpires: Mon, 12 May 2025 12:00:00 GMT\ncache-control: public, max-age=604800\nserver: ECS (dcb/7F84)\ncontent-length: 1256\n```\n\n### **-L, --location**\n\nFollow redirects if the server reports that the requested page has moved.\n\n```console\n$ curl -L http://github.com\n```\n\n### **-X, --request \\<command\\>**\n\nSpecify request method to use (GET, POST, PUT, DELETE, etc.).\n\n```console\n$ curl -X POST https://api.example.com/data\n```\n\n### **-H, --header \\<header\\>**\n\nPass custom header(s) to server.\n\n```console\n$ curl -H \"Content-Type: application/json\" -H \"Authorization: Bearer token123\" https://api.example.com\n```\n\n### **-d, --data \\<data\\>**\n\nSend specified data in a POST request.\n\n```console\n$ curl -X POST -d \"name=John&age=30\" https://api.example.com/users\n```\n\n### **--data-binary \\<data\\>**\n\nSend data exactly as specified with no extra processing.\n\n```console\n$ curl --data-binary @filename.json https://api.example.com/upload\n```\n\n### **-F, --form \\<name=content\\>**\n\nFor multipart/form-data uploading (e.g., file uploads).\n\n```console\n$ curl -F \"profile=@photo.jpg\" https://api.example.com/upload\n```\n\n### **-u, --user \\<user:password\\>**\n\nSpecify user and password for server authentication.\n\n```console\n$ curl -u username:password https://api.example.com/secure\n```\n\n### **-k, --insecure**\n\nAllow insecure server connections when using SSL.\n\n```console\n$ curl -k https://self-signed-certificate.com\n```\n\n## Usage Examples\n\n### Downloading a file\n\n```console\n$ curl -o output.html https://example.com\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  1256  100  1256    0     0  12560      0 --:--:-- --:--:-- --:--:-- 12560\n```\n\n### Making a POST request with JSON data\n\n```console\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"name\":\"John\",\"age\":30}' https://api.example.com/users\n{\"id\": 123, \"status\": \"created\"}\n```\n\n### Uploading a file\n\n```console\n$ curl -F \"file=@document.pdf\" https://api.example.com/upload\n{\"status\": \"success\", \"fileId\": \"abc123\"}\n```\n\n### Following redirects and saving output\n\n```console\n$ curl -L -o result.html https://website-with-redirect.com\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   256  100   256    0     0   1024      0 --:--:-- --:--:-- --:--:--  1024\n100  5120  100  5120    0     0  10240      0 --:--:-- --:--:-- --:--:-- 10240\n```\n\n## Tips\n\n### Use Verbose Mode for Debugging\n\nWhen troubleshooting, use `-v` (verbose) or `-vv` (more verbose) to see the complete request and response details:\n\n```console\n$ curl -v https://example.com\n```\n\n### Save Cookies and Use Them Later\n\nFor sessions that require cookies:\n\n```console\n$ curl -c cookies.txt https://example.com/login -d \"user=name&password=secret\"\n$ curl -b cookies.txt https://example.com/protected-area\n```\n\n### Limit Transfer Rate\n\nTo avoid consuming all bandwidth:\n\n```console\n$ curl --limit-rate 100K -O https://example.com/large-file.zip\n```\n\n### Resume Interrupted Downloads\n\nIf a download gets interrupted, resume it with `-C -`:\n\n```console\n$ curl -C - -O https://example.com/large-file.zip\n```\n\n### Test API Endpoints Quickly\n\nFor quick API testing without writing scripts:\n\n```console\n$ curl -s https://api.example.com/data | jq\n```\n\n## Frequently Asked Questions\n\n#### Q1. How do I download multiple files with curl?\nA. Use multiple `-O` options or a bash loop:\n```console\n$ curl -O https://example.com/file1.txt -O https://example.com/file2.txt\n```\nOr:\n```console\n$ for url in https://example.com/file{1..5}.txt; do curl -O \"$url\"; done\n```\n\n#### Q2. How can I see the HTTP response code only?\nA. Use the `-s` and `-o /dev/null` options with `-w` to format the output:\n```console\n$ curl -s -o /dev/null -w \"%{http_code}\" https://example.com\n200\n```\n\n#### Q3. How do I send a request with a specific timeout?\nA. Use the `--connect-timeout` and `--max-time` options:\n```console\n$ curl --connect-timeout 5 --max-time 10 https://example.com\n```\n\n#### Q4. How can I make curl ignore SSL certificate errors?\nA. Use the `-k` or `--insecure` option, but be aware of security implications:\n```console\n$ curl -k https://self-signed-certificate.com\n```\n\n#### Q5. How do I use curl with a proxy?\nA. Use the `-x` or `--proxy` option:\n```console\n$ curl -x http://proxy-server:8080 https://example.com\n```\n\n## References\n\nhttps://curl.se/docs/manpage.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 1932
  }
}