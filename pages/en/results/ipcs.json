{
  "id": "msg_013MT8BzV1JYw5wB8SpstizM",
  "content": [
    {
      "text": "# ipcs command\n\nDisplay information about active IPC facilities (shared memory segments, message queues, and semaphores).\n\n## Overview\n\nThe `ipcs` command shows information about System V inter-process communication (IPC) resources currently active in the system. It displays details about shared memory segments, message queues, and semaphore arrays, including their IDs, owners, permissions, and usage statistics.\n\n## Options\n\n### **-a**\n\nShow all information for all three resources (default behavior).\n\n```console\n$ ipcs -a\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n0x00000000 0          root       644        0            0           \n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n0x00000000 0          root       644        80         2          dest         \n\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems     \n0x00000000 0          root       644        1\n```\n\n### **-q**\n\nShow information about active message queues.\n\n```console\n$ ipcs -q\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n0x00000000 0          root       644        0            0\n```\n\n### **-m**\n\nShow information about active shared memory segments.\n\n```console\n$ ipcs -m\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n0x00000000 0          root       644        80         2          dest\n```\n\n### **-s**\n\nShow information about active semaphore arrays.\n\n```console\n$ ipcs -s\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems     \n0x00000000 0          root       644        1\n```\n\n### **-t**\n\nShow time information for IPC facilities.\n\n```console\n$ ipcs -t -m\n------ Shared Memory Operation/Change Times --------\nshmid      last-op                    last-changed              \n0          Wed May  5 10:15:35 2025   Wed May  5 10:15:35 2025\n```\n\n### **-p**\n\nShow process IDs using or creating the IPC facilities.\n\n```console\n$ ipcs -p -m\n------ Shared Memory Creator/Last-op PIDs --------\nshmid      owner      cpid       lpid      \n0          root       1234       5678\n```\n\n### **-c**\n\nShow creator and owner information.\n\n```console\n$ ipcs -c -m\n------ Shared Memory Segment Creators/Owners --------\nshmid      perms      cuid       cgid       uid        gid       \n0          644        0          0          0          0\n```\n\n## Usage Examples\n\n### Display all IPC resources with detailed information\n\n```console\n$ ipcs -a\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n0x00000000 0          root       644        0            0           \n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n0x00000000 0          root       644        80         2          dest         \n\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems     \n0x00000000 0          root       644        1\n```\n\n### Show limits for IPC resources\n\n```console\n$ ipcs -l\n------ Messages Limits --------\nmax queues system wide = 32000\nmax size of message (bytes) = 8192\ndefault max size of queue (bytes) = 16384\n\n------ Shared Memory Limits --------\nmax number of segments = 4096\nmax seg size (kbytes) = 18014398509465599\nmax total shared memory (kbytes) = 18014398509481980\nmin seg size (bytes) = 1\n\n------ Semaphore Limits --------\nmax number of arrays = 32000\nmax semaphores per array = 32000\nmax semaphores system wide = 1024000000\nmax ops per semop call = 500\nsemaphore max value = 32767\n```\n\n## Tips:\n\n### Identify Resource Leaks\n\nUse `ipcs` regularly to monitor IPC resources. If you notice resources that persist after applications terminate, it could indicate a resource leak that needs to be cleaned up.\n\n### Clean Up Stale IPC Resources\n\nUse `ipcrm` command to remove unused IPC resources identified by `ipcs`. For example, `ipcrm -m <shmid>` removes a shared memory segment.\n\n### Check Resource Limits\n\nUse `ipcs -l` to view system-wide limits for IPC resources. This helps in troubleshooting applications that might be hitting resource constraints.\n\n## Frequently Asked Questions\n\n#### Q1. What is the difference between the three IPC facilities?\nA. Shared memory segments allow processes to share memory directly, message queues enable processes to exchange messages, and semaphores provide synchronization mechanisms between processes.\n\n#### Q2. How do I remove an IPC resource?\nA. Use the `ipcrm` command with the appropriate option and ID. For example, `ipcrm -m <shmid>` removes a shared memory segment, `ipcrm -q <msqid>` removes a message queue, and `ipcrm -s <semid>` removes a semaphore array.\n\n#### Q3. Why do I see IPC resources that don't belong to any running process?\nA. These are likely orphaned resources from processes that terminated without properly cleaning up. Use `ipcrm` to remove them if they're no longer needed.\n\n#### Q4. How can I see which processes are using a specific IPC resource?\nA. Use `ipcs -p` to show the process IDs (PIDs) of creators and last operators of IPC resources.\n\n## References\n\nhttps://man7.org/linux/man-pages/man1/ipcs.1.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1679,
    "output_tokens": 1464
  }
}