{
  "id": "msg_01D1NHSktuugpUbP5Kag1B5T",
  "content": [
    {
      "text": "# ss command\n\nDisplay socket statistics, providing information about network connections.\n\n## Overview\n\nThe `ss` command is a utility for investigating sockets, showing information about network connections, routing tables, and network interfaces. It's a more powerful and faster alternative to the older `netstat` command, offering detailed insights into TCP, UDP, and other socket types on a Linux system.\n\n## Options\n\n### **-a, --all**\n\nShow both listening and non-listening sockets\n\n```console\n$ ss -a\nNetid  State   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port  Process\nu_str  ESTAB   0       0       * 19350               * 19351\nu_str  ESTAB   0       0       * 19351               * 19350\ntcp    LISTEN  0       128     0.0.0.0:22            0.0.0.0:*\ntcp    ESTAB   0       0       192.168.1.5:22        192.168.1.10:52914\n```\n\n### **-l, --listening**\n\nDisplay only listening sockets\n\n```console\n$ ss -l\nNetid  State   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port  Process\ntcp    LISTEN  0       128     0.0.0.0:22            0.0.0.0:*\ntcp    LISTEN  0       128     127.0.0.1:631         0.0.0.0:*\ntcp    LISTEN  0       128     127.0.0.1:25          0.0.0.0:*\n```\n\n### **-t, --tcp**\n\nDisplay only TCP sockets\n\n```console\n$ ss -t\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nESTAB   0       0       192.168.1.5:22        192.168.1.10:52914\n```\n\n### **-u, --udp**\n\nDisplay only UDP sockets\n\n```console\n$ ss -u\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nUNCONN  0       0       0.0.0.0:68            0.0.0.0:*\nUNCONN  0       0       0.0.0.0:5353          0.0.0.0:*\n```\n\n### **-p, --processes**\n\nShow process using socket\n\n```console\n$ ss -p\nNetid  State   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port  Process\ntcp    ESTAB   0       0       192.168.1.5:22        192.168.1.10:52914 users:((\"sshd\",pid=1234,fd=3))\n```\n\n### **-n, --numeric**\n\nDon't resolve service names (show port numbers instead)\n\n```console\n$ ss -n\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nESTAB   0       0       192.168.1.5:22        192.168.1.10:52914\n```\n\n### **-r, --resolve**\n\nResolve numeric address/ports\n\n```console\n$ ss -r\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nESTAB   0       0       server:ssh            client:52914\n```\n\n## Usage Examples\n\n### Show all TCP connections\n\n```console\n$ ss -ta\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nLISTEN  0       128     0.0.0.0:ssh           0.0.0.0:*\nLISTEN  0       128     127.0.0.1:ipp         0.0.0.0:*\nESTAB   0       0       192.168.1.5:ssh       192.168.1.10:52914\n```\n\n### Show listening TCP sockets with process information\n\n```console\n$ ss -tlp\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port   Process\nLISTEN  0       128     0.0.0.0:ssh           0.0.0.0:*           users:((\"sshd\",pid=1234,fd=3))\nLISTEN  0       128     127.0.0.1:ipp         0.0.0.0:*           users:((\"cupsd\",pid=5678,fd=12))\n```\n\n### Filter connections by port\n\n```console\n$ ss -t '( dport = :ssh or sport = :ssh )'\nState   Recv-Q  Send-Q  Local Address:Port   Peer Address:Port\nESTAB   0       0       192.168.1.5:ssh       192.168.1.10:52914\n```\n\n## Tips:\n\n### Combine Options for Detailed Output\n\nCombine options like `ss -tuln` to show TCP and UDP listening sockets with numeric addresses. This is useful for quickly checking which ports are open on your system.\n\n### Filter by Connection State\n\nUse `ss state established` to show only established connections, or `ss state time-wait` to see connections in TIME-WAIT state. This helps troubleshoot connection issues.\n\n### Monitor Connections in Real-time\n\nUse `watch -n1 'ss -t'` to monitor TCP connections in real-time with updates every second. This is helpful when tracking connection changes during troubleshooting.\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `ss` and `netstat`?\nA. `ss` is faster and provides more information than `netstat`. It directly queries kernel space for socket information rather than parsing `/proc` files.\n\n#### Q2. How can I see which process is using a specific port?\nA. Use `ss -ltp` to see listening TCP sockets with process information. You can filter by port: `ss -ltp sport = :80`.\n\n#### Q3. How do I check for established connections to a specific IP address?\nA. Use `ss -t dst 192.168.1.10` to see all TCP connections to that IP address.\n\n#### Q4. How can I see socket memory usage?\nA. Use `ss -m` to display socket memory usage information.\n\n## References\n\nhttps://man7.org/linux/man-pages/man8/ss.8.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1632,
    "output_tokens": 1525
  }
}