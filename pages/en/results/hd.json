{
  "id": "msg_01NxHc9fYLPCmcMXugDfow1Z",
  "content": [
    {
      "text": "# hd command\n\nDisplay file contents in hexadecimal, decimal, octal, or ASCII format.\n\n## Overview\n\nThe `hd` command (hexdump) displays the contents of files in various formats, primarily hexadecimal. It's useful for examining binary files, viewing non-printable characters, and analyzing file structures. The command reads from files or standard input and outputs formatted representations of the data.\n\n## Options\n\n### **-a, --ascii**\n\nDisplay ASCII characters alongside the hex dump.\n\n```console\n$ echo \"Hello\" | hd -a\n00000000  48 65 6c 6c 6f 0a                                 |Hello.|\n00000006\n```\n\n### **-c, --canonical**\n\nUse canonical hex+ASCII display format.\n\n```console\n$ echo \"Hello\" | hd -c\n00000000  48 65 6c 6c 6f 0a                                 |Hello.|\n00000006\n```\n\n### **-d, --decimal**\n\nDisplay output in decimal format instead of hexadecimal.\n\n```console\n$ echo \"Hello\" | hd -d\n0000000   072 101 108 108 111 012\n0000006\n```\n\n### **-o, --octal**\n\nDisplay output in octal format.\n\n```console\n$ echo \"Hello\" | hd -o\n0000000 000110 000145 000154 000154 000157 000012\n0000006\n```\n\n### **-n, --length=N**\n\nInterpret only N bytes of input.\n\n```console\n$ echo \"Hello World\" | hd -n 5\n00000000  48 65 6c 6c 6f                                    |Hello|\n00000005\n```\n\n### **-s, --skip=N**\n\nSkip N bytes from the beginning of input.\n\n```console\n$ echo \"Hello World\" | hd -s 6\n00000006  57 6f 72 6c 64 0a                                 |World.|\n0000000c\n```\n\n### **-v, --no-squeezing**\n\nDisplay all input data (disable the default behavior of replacing duplicate lines with an asterisk).\n\n```console\n$ dd if=/dev/zero bs=16 count=3 | hd -v\n00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n00000030\n```\n\n## Usage Examples\n\n### Examining a binary file\n\n```console\n$ hd /bin/ls | head -3\n00000000  cf fa ed fe 07 00 00 01  03 00 00 80 02 00 00 00  |................|\n00000010  10 00 00 00 18 07 00 00  85 00 20 00 00 00 00 00  |.......... .....|\n00000020  19 00 00 00 48 00 00 00  5f 5f 50 41 47 45 5a 45  |....H...__PAGEZE|\n```\n\n### Viewing file headers\n\n```console\n$ hd -n 16 image.jpg\n00000000  ff d8 ff e0 00 10 4a 46  49 46 00 01 01 01 00 48  |......JFIF.....H|\n00000010\n```\n\n### Comparing binary files\n\n```console\n$ hd file1.bin > file1.hex\n$ hd file2.bin > file2.hex\n$ diff file1.hex file2.hex\n```\n\n## Tips\n\n### Combine with Other Commands\n\nPipe output from other commands to `hd` for quick inspection of binary data:\n\n```console\n$ curl -s https://example.com | hd | head\n```\n\n### Examine Non-Printable Characters\n\nUse `hd` to see hidden characters like carriage returns, line feeds, and null bytes that might cause issues in text files.\n\n### Analyze File Formats\n\n`hd` is useful for examining file headers to identify file types or debugging file format issues.\n\n### Memory Efficiency\n\nFor very large files, use the `-s` and `-n` options to examine specific portions without loading the entire file.\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `hd` and `hexdump`?\nA. On many systems, `hd` is actually a symbolic link to `hexdump` or a simplified version of it. They serve the same basic purpose, but `hexdump` may offer more formatting options.\n\n#### Q2. How can I view only the ASCII representation?\nA. While `hd` always shows some hex representation, you can use `strings` command instead if you only want printable ASCII characters.\n\n#### Q3. Can I use `hd` to modify files?\nA. No, `hd` is only for viewing file contents. To modify binary files, you would need tools like `hexedit` or `dd`.\n\n#### Q4. How do I interpret the output format?\nA. The leftmost column shows the byte offset (position) in hexadecimal. The middle columns show the hex/decimal/octal values of each byte. The rightmost column (when using -a or -c) shows the ASCII representation, with dots for non-printable characters.\n\n## References\n\nhttps://man.openbsd.org/hd.1\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1679,
    "output_tokens": 1368
  }
}