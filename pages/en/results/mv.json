{
  "id": "msg_01CkfgC58TgvP9u3wo6RTW7A",
  "content": [
    {
      "text": "# mv command\n\nMove (rename) files and directories.\n\n## Overview\n\nThe `mv` command moves files or directories from one location to another. It can also be used to rename files and directories. When moving files across filesystems, `mv` copies the file and deletes the original.\n\n## Options\n\n### **-f, --force**\n\nOverride existing files without prompting for confirmation.\n\n```console\n$ mv -f oldfile.txt newfile.txt\n```\n\n### **-i, --interactive**\n\nPrompt before overwriting existing files.\n\n```console\n$ mv -i oldfile.txt newfile.txt\nmv: overwrite 'newfile.txt'? y\n```\n\n### **-n, --no-clobber**\n\nDo not overwrite existing files.\n\n```console\n$ mv -n oldfile.txt newfile.txt\n```\n\n### **-v, --verbose**\n\nExplain what is being done.\n\n```console\n$ mv -v oldfile.txt newfile.txt\n'oldfile.txt' -> 'newfile.txt'\n```\n\n### **-b, --backup**\n\nMake a backup of each existing destination file.\n\n```console\n$ mv -b oldfile.txt newfile.txt\n```\n\n## Usage Examples\n\n### Renaming a file\n\n```console\n$ mv oldname.txt newname.txt\n```\n\n### Moving a file to another directory\n\n```console\n$ mv file.txt /path/to/directory/\n```\n\n### Moving multiple files to a directory\n\n```console\n$ mv file1.txt file2.txt file3.txt /path/to/directory/\n```\n\n### Moving and renaming a directory\n\n```console\n$ mv old_directory/ new_directory/\n```\n\n## Tips:\n\n### Prevent Accidental Overwrites\n\nUse `mv -i` to enable interactive mode, which prompts for confirmation before overwriting existing files. This is especially useful in scripts or when moving multiple files.\n\n### Create Backups Automatically\n\nWhen overwriting important files, use `mv -b` to create backups of the original files. This creates a backup with a tilde (~) appended to the filename.\n\n### Move Hidden Files\n\nWhen moving hidden files (those starting with a dot), be explicit with the filename to avoid confusion:\n```console\n$ mv .hidden_file /new/location/\n```\n\n### Use Wildcards Carefully\n\nWhen using wildcards, first use `ls` with the same pattern to verify which files will be moved:\n```console\n$ ls *.txt\n$ mv *.txt /destination/\n```\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `mv` and `cp`?\nA. `mv` moves files (removing them from the original location), while `cp` copies files (leaving the original intact).\n\n#### Q2. How do I move a file without overwriting an existing file?\nA. Use `mv -n source destination` to prevent overwriting existing files.\n\n#### Q3. Can I move multiple files at once?\nA. Yes, specify multiple source files followed by a destination directory: `mv file1 file2 file3 /destination/`.\n\n#### Q4. How do I rename a file?\nA. Use `mv oldname newname` to rename a file.\n\n#### Q5. What happens when I move files between different filesystems?\nA. When moving between filesystems, `mv` copies the file to the new location and then deletes the original.\n\n## References\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/mv-invocation.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 829
  }
}