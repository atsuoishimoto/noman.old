Output format

- Output the explanation in Markdown, with the format specified below.
- When outputting an example of a command execution in the terminal, set the language type of the fenced code blocks to `console`.
- Header lines (lines starting with #, ##, etc.) do not need to be followed by an empty line. Continue with the text directly after the header.
- If a current document is provided and the file is being updated, leave a record of the revisions at the end of the document, but only if actual changes were made. Each revision record must begin with the date of the change. When adding revision records, do not delete or replace any existing records; instead, insert a new line above all existing records and write the new revision as the latest dated entry. Always keep the newest revision at the top by inserting a new line for it. If the document is newly created, simply add "First revision" as the revision record.

<format>
# ls command
Provide a 1 line overview of the command.

## Overview
Write a brief and clear explanation of what the command does, its typical use cases, and any important characteristics that users should know at a glance. Focus on giving readers a quick understanding without going into detailed options or advanced usage.

## Options
### **Option 1**
A brief explanation of the option  
```bash
$ ls -l
total 16
-rw-r--r--  1 user  staff  1024 Apr 10 15:30 document.txt
drwxr-xr-x  3 user  staff   96  Apr 9  14:22 projects
```

### **Option 2**:
A brief explanation of the option  

```bash
$ ls -l
total 16
-rw-r--r--  1 user  staff  1024 Apr 10 15:30 document.txt
drwxr-xr-x  3 user  staff   96  Apr 9  14:22 projects
```

## Usage Examples
Below is an example of how to show a command and its output:

### Listing specific directories
```console
$ ls -l /usr/bin
[output shows contents of /usr/bin directory]
```

### Listing files by pattern
```console
$ ls *.txt
document.txt  notes.txt  readme.txt
```


## Tips:
### Display Sizes in a Readable Format
Using ls -lh shows file sizes in human-readable units like "1K" or "5M". This is useful when you want to quickly find large files.

### Sort by Modification Time
Using ls -lt sorts files by their last modification time, with the newest files listed first. This helps when you need to locate recently updated files.

### Show Hidden Files
Using ls -a displays all files, including hidden dotfiles like .bashrc. It's handy when you need to check configuration or system files.

## Frequently Asked Questions
#### Q1. What is `ls` used for?
A. `ls` lists files and directories in the current directory.

#### Q2. How do I show hidden files?
A. Use `ls -a`. This displays files starting with a dot (`.`).

#### Q3. How can I view detailed file information?
A. Use `ls -l` to see permissions, owner, size, and last modified time.

## References
https://www.gnu.org/software/coreutils/manual/html_node/ls-invocation.html

If an official primary information source for the command being explained can be identified, provide its URL here. Otherwise, write "not available."

## Revisions

- 2025/04/01 -l option added.
- 2025/01/01 -a option added.
</format>
