{
  "id": "msg_013S3pGE7shPyKxW4aLirU3B",
  "content": [
    {
      "text": "# ps command\n\nDisplay information about active processes.\n\n## Overview\n\nThe `ps` command shows a snapshot of current processes running on the system. It provides details about process IDs (PIDs), CPU usage, memory consumption, and other process-related information. By default, `ps` shows only processes owned by the current user and associated with the current terminal.\n\n## Options\n\n### **-e**\n\nDisplay information about all processes (equivalent to -A).\n\n```console\n$ ps -e\n  PID TTY          TIME CMD\n    1 ?        00:00:03 systemd\n  546 ?        00:00:00 systemd-journal\n  578 ?        00:00:00 systemd-udevd\n  933 ?        00:00:00 sshd\n 1028 tty1     00:00:00 bash\n 1892 tty1     00:00:00 ps\n```\n\n### **-f**\n\nDisplay full-format listing, showing UID, PID, PPID, CPU usage, and more.\n\n```console\n$ ps -f\nUID        PID  PPID  C STIME TTY          TIME CMD\nuser      1028  1027  0 10:30 tty1     00:00:00 bash\nuser      1893  1028  0 10:35 tty1     00:00:00 ps -f\n```\n\n### **-l**\n\nDisplay long format with detailed information including priority, state codes, and memory usage.\n\n```console\n$ ps -l\nF S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD\n0 S  1000  1028  1027  0  80   0 -  2546 wait   tty1     00:00:00 bash\n0 R  1000  1894  1028  0  80   0 -  2715 -      tty1     00:00:00 ps\n```\n\n### **-u username**\n\nDisplay processes belonging to the specified user.\n\n```console\n$ ps -u john\n  PID TTY          TIME CMD\n 1028 tty1     00:00:00 bash\n 1895 tty1     00:00:00 ps\n 2156 ?        00:00:01 firefox\n```\n\n### **-aux**\n\nDisplay detailed information about all processes (BSD style).\n\n```console\n$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.0  0.1 168940  9128 ?        Ss   May04   0:03 /sbin/init\nroot       546  0.0  0.1  55492  8456 ?        Ss   May04   0:00 /lib/systemd/systemd-journald\nuser      1028  0.0  0.0  21712  5312 tty1     Ss   10:30   0:00 bash\nuser      1896  0.0  0.0  37364  3328 tty1     R+   10:36   0:00 ps aux\n```\n\n## Usage Examples\n\n### Finding processes by name\n\n```console\n$ ps -ef | grep firefox\nuser      2156  1028  2 10:15 ?        00:01:23 /usr/lib/firefox/firefox\nuser      1897  1028  0 10:36 tty1     00:00:00 grep --color=auto firefox\n```\n\n### Displaying process tree\n\n```console\n$ ps -ejH\n  PID  PGID   SID TTY          TIME CMD\n    1     1     1 ?        00:00:03 systemd\n  546   546   546 ?        00:00:00   systemd-journal\n  578   578   578 ?        00:00:00   systemd-udevd\n  933   933   933 ?        00:00:00   sshd\n 1027  1027  1027 tty1     00:00:00   login\n 1028  1028  1028 tty1     00:00:00     bash\n 1898  1898  1028 tty1     00:00:00       ps\n```\n\n### Sorting processes by memory usage\n\n```console\n$ ps aux --sort=-%mem\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nuser      2156  2.0  8.5 1854036 348216 ?      Sl   10:15   1:23 /usr/lib/firefox/firefox\nuser      2201  0.5  2.3 1123460 95684 ?       Sl   10:18   0:15 /usr/lib/thunderbird/thunderbird\nroot       546  0.0  0.1  55492  8456 ?        Ss   May04   0:00 /lib/systemd/systemd-journald\n```\n\n## Tips:\n\n### Customize Output Fields\n\nUse the `-o` option to specify which fields to display:\n\n```console\n$ ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu\n  PID  PPID CMD                         %MEM %CPU\n 2156  1028 /usr/lib/firefox/firefox     8.5  2.0\n 2201  1028 /usr/lib/thunderbird/thun    2.3  0.5\n    1     0 /sbin/init                   0.1  0.0\n```\n\n### Monitor Processes in Real-time\n\nCombine `ps` with `watch` to monitor processes in real-time:\n\n```console\n$ watch -n 1 'ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -10'\n```\n\n### Find Parent-Child Process Relationships\n\nUse `ps -f` to see the PPID (parent process ID) column, which helps understand process relationships.\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `ps aux` and `ps -ef`?\nA. Both show all processes, but `ps aux` is BSD-style output while `ps -ef` is UNIX-style output. `ps aux` shows %CPU and %MEM usage, while `ps -ef` shows PPID (parent process ID).\n\n#### Q2. How do I find processes consuming the most CPU?\nA. Use `ps aux --sort=-%cpu` to sort processes by CPU usage in descending order.\n\n#### Q3. How do I find processes consuming the most memory?\nA. Use `ps aux --sort=-%mem` to sort processes by memory usage in descending order.\n\n#### Q4. How can I see only processes for a specific user?\nA. Use `ps -u username` to display only processes owned by a specific user.\n\n## macOS Considerations\n\nOn macOS, some BSD-style options differ from Linux. For example, `-e` is not available, but you can use `ps -A` to show all processes. Also, the memory reporting columns may show different values than on Linux systems.\n\n## References\n\nhttps://man7.org/linux/man-pages/man1/ps.1.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 1728
  }
}