{
  "id": "msg_019NAo2dyqnoEAZJvJN2m2EG",
  "content": [
    {
      "text": "# getent command\n\nRetrieves entries from administrative databases.\n\n## Overview\n\n`getent` is a Unix command that displays entries from administrative databases (like `/etc/passwd`, `/etc/group`, etc.) using the same library functions that applications would use. It's useful for querying system databases in a standardized way, regardless of whether the information comes from local files, NIS, LDAP, or other sources.\n\n## Options\n\n### **database**\n\nSpecifies which database to query (passwd, group, hosts, services, protocols, networks, etc.)\n\n```console\n$ getent passwd root\nroot:x:0:0:root:/root:/bin/bash\n```\n\n### **-s, --service=CONFIG**\n\nSpecify service configuration to be used\n\n```console\n$ getent -s files passwd root\nroot:x:0:0:root:/root:/bin/bash\n```\n\n### **-h, --help**\n\nDisplay help information\n\n```console\n$ getent --help\nUsage: getent [OPTION...] database [key ...]\nGet entries from administrative database.\n\n  -i, --no-idn               disable IDN encoding\n  -s, --service=CONFIG       Service configuration to be used\n  -?, --help                 Give this help list\n      --usage                Give a short usage message\n  -V, --version              Print program version\n\nMandatory or optional arguments to long options are also mandatory or optional\nfor any corresponding short options.\n\nSupported databases:\nahosts ahostsv4 ahostsv6 aliases ethers group gshadow hosts netgroup networks\npasswd protocols rpc services shadow\n```\n\n### **-V, --version**\n\nDisplay version information\n\n```console\n$ getent --version\ngetent (GNU libc) 2.31\n```\n\n### **-i, --no-idn**\n\nDisable IDN (Internationalized Domain Names) encoding\n\n```console\n$ getent -i hosts example.com\n93.184.216.34   example.com\n```\n\n## Usage Examples\n\n### Looking up a user by username\n\n```console\n$ getent passwd username\nusername:x:1000:1000:Full Name:/home/username:/bin/bash\n```\n\n### Finding a host by name\n\n```console\n$ getent hosts google.com\n142.250.190.78  google.com\n```\n\n### Listing all groups\n\n```console\n$ getent group\nroot:x:0:\ndaemon:x:1:\nbin:x:2:\nsys:x:3:\n[additional groups...]\n```\n\n### Looking up a service port\n\n```console\n$ getent services ssh\nssh                  22/tcp\n```\n\n## Tips:\n\n### Use with grep for filtering\n\nCombine `getent` with `grep` to filter results from large databases:\n\n```console\n$ getent passwd | grep username\n```\n\n### Check if a user exists\n\nUse the exit code to check if a user exists in the system:\n\n```console\n$ getent passwd username > /dev/null && echo \"User exists\" || echo \"User does not exist\"\n```\n\n### Find all members of a group\n\nUse the group database to see all members of a specific group:\n\n```console\n$ getent group sudo\nsudo:x:27:user1,user2,user3\n```\n\n## Frequently Asked Questions\n\n#### Q1. What databases can I query with getent?\nA. Common databases include passwd, group, hosts, services, protocols, networks, shadow, and aliases. The available databases may vary by system.\n\n#### Q2. How do I check if a hostname resolves?\nA. Use `getent hosts hostname`. If the hostname resolves, it will return the IP address and hostname.\n\n#### Q3. Can getent query LDAP or other directory services?\nA. Yes, getent uses the Name Service Switch (NSS) configuration, so it can query any source configured in your system's `/etc/nsswitch.conf` file, including LDAP, NIS, DNS, and local files.\n\n#### Q4. How is getent different from just reading files like /etc/passwd directly?\nA. getent respects the system's NSS configuration, so it retrieves information from all configured sources (local files, LDAP, NIS, etc.), not just the local files.\n\n## References\n\nhttps://man7.org/linux/man-pages/man1/getent.1.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1679,
    "output_tokens": 1016
  }
}