{
  "id": "msg_01Nq6F3Ka6mWJQpjKbppM5Lo",
  "content": [
    {
      "text": "# script command\n\nMake a typescript of a terminal session.\n\n## Overview\n\nThe `script` command creates a record (typescript) of everything displayed in your terminal session. It captures all input and output, allowing you to save terminal interactions to a file for documentation, sharing, or review purposes.\n\n## Options\n\n### **-a, --append**\n\nAppend the output to the specified file or typescript, rather than overwriting it.\n\n```console\n$ script -a session.log\nScript started, file is session.log\n$ echo \"This will be appended to the existing file\"\nThis will be appended to the existing file\n$ exit\nScript done, file is session.log\n```\n\n### **-f, --flush**\n\nFlush output after each write to ensure real-time recording, useful when monitoring the typescript file while the session is active.\n\n```console\n$ script -f realtime.log\nScript started, file is realtime.log\n$ echo \"This output is flushed immediately\"\nThis output is flushed immediately\n$ exit\nScript done, file is realtime.log\n```\n\n### **-q, --quiet**\n\nRun in quiet mode, suppressing the start and done messages.\n\n```console\n$ script -q quiet.log\n$ echo \"No start/end messages displayed\"\nNo start/end messages displayed\n$ exit\n```\n\n### **-t, --timing=FILE**\n\nOutput timing data to FILE, which can be used with the scriptreplay command to replay the session at the original speed.\n\n```console\n$ script -t timing.log typescript.log\nScript started, file is typescript.log\n$ echo \"This session can be replayed later\"\nThis session can be replayed later\n$ exit\nScript done, file is typescript.log\n```\n\n## Usage Examples\n\n### Basic Usage\n\n```console\n$ script my_session.log\nScript started, file is my_session.log\n$ ls\nDocuments  Downloads  Pictures\n$ echo \"Hello, world!\"\nHello, world!\n$ exit\nScript done, file is my_session.log\n```\n\n### Recording a Session for Later Replay\n\n```console\n$ script --timing=timing.log typescript.log\nScript started, file is typescript.log\n$ echo \"This is a demonstration\"\nThis is a demonstration\n$ ls -la\ntotal 20\ndrwxr-xr-x  2 user user 4096 May  5 10:00 .\ndrwxr-xr-x 20 user user 4096 May  5 09:55 ..\n-rw-r--r--  1 user user  220 May  5 09:55 .bash_logout\n$ exit\nScript done, file is typescript.log\n$ scriptreplay timing.log typescript.log\n```\n\n## Tips\n\n### Replay a Recorded Session\n\nUse `scriptreplay` with the timing file to replay a recorded session at its original speed:\n```console\n$ scriptreplay timing.log typescript.log\n```\n\n### Avoid Capturing Sensitive Information\n\nBe cautious when using `script` for sessions where sensitive information (like passwords) might be entered. The typescript will contain everything displayed on the terminal.\n\n### Use with SSH Sessions\n\nRecord remote SSH sessions by starting `script` before connecting:\n```console\n$ script ssh_session.log\n$ ssh user@remote-server\n```\n\n### Terminate Properly\n\nAlways end your script session with `exit` or Ctrl+D to ensure the typescript file is properly closed and saved.\n\n## Frequently Asked Questions\n\n#### Q1. What is the default filename if none is specified?\nA. If no filename is specified, `script` uses \"typescript\" as the default output file.\n\n#### Q2. Can I record a session and share it with others?\nA. Yes, the typescript file contains all terminal output and can be shared. For a more interactive experience, use the `-t` option to create a timing file and share both files for replay with `scriptreplay`.\n\n#### Q3. How do I view the contents of a typescript file?\nA. You can view it with any text editor or terminal pager like `less` or `more`:\n```console\n$ less typescript\n```\n\n#### Q4. Does script record commands that aren't displayed?\nA. No, `script` only records what is displayed on the terminal. Commands entered with no echo (like passwords) won't appear in the typescript.\n\n## References\n\nhttps://www.man7.org/linux/man-pages/man1/script.1.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1632,
    "output_tokens": 1033
  }
}