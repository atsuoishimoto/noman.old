{
  "id": "msg_016ahYyE9Lv3NV8DirNqWf24",
  "content": [
    {
      "text": "# stat command\n\nDisplay file or file system status information.\n\n## Overview\n\nThe `stat` command displays detailed information about files, directories, or file systems. It shows metadata such as file size, permissions, access times, inode information, and more. This command is useful for system administrators and users who need to examine file attributes beyond what basic commands like `ls` provide.\n\n## Options\n\n### **-c, --format=FORMAT**\n\nOutput information using a specified format string.\n\n```console\n$ stat -c \"%n %s %U\" file.txt\nfile.txt 1024 user\n```\n\n### **-f, --file-system**\n\nDisplay file system status instead of file status.\n\n```console\n$ stat -f /home\n  File: \"/home\"\n    ID: 2f5b04742a3bfad9 Namelen: 255     Type: ext4\nBlock size: 4096       Fundamental block size: 4096\nBlocks: Total: 121211648  Free: 62303156   Available: 56073252\nInodes: Total: 30539776   Free: 29752540\n```\n\n### **-L, --dereference**\n\nFollow links (show information about the file the link references rather than the link itself).\n\n```console\n$ stat -L symlink.txt\n  File: 'symlink.txt'\n  Size: 1024      \tBlocks: 8          IO Block: 4096   regular file\nDevice: 801h/2049d\tInode: 1234567     Links: 1\nAccess: (0644/-rw-r--r--)  Uid: ( 1000/    user)   Gid: ( 1000/    user)\nAccess: 2025-05-01 10:15:30.000000000 +0000\nModify: 2025-05-01 10:15:30.000000000 +0000\nChange: 2025-05-01 10:15:30.000000000 +0000\n Birth: 2025-05-01 10:15:30.000000000 +0000\n```\n\n### **-t, --terse**\n\nPrint the information in terse form.\n\n```console\n$ stat -t file.txt\nfile.txt 1024 8 81a4 1000 1000 801 1234567 1 0 0 1619875530 1619875530 1619875530 1619875530\n```\n\n### **--printf=FORMAT**\n\nLike --format, but interpret backslash escapes and do not output a mandatory trailing newline.\n\n```console\n$ stat --printf=\"%n has %s bytes\\n\" file.txt\nfile.txt has 1024 bytes\n```\n\n## Usage Examples\n\n### Basic file information\n\n```console\n$ stat document.txt\n  File: document.txt\n  Size: 1024      \tBlocks: 8          IO Block: 4096   regular file\nDevice: 801h/2049d\tInode: 1234567     Links: 1\nAccess: (0644/-rw-r--r--)  Uid: ( 1000/    user)   Gid: ( 1000/    user)\nAccess: 2025-05-01 10:15:30.000000000 +0000\nModify: 2025-05-01 10:15:30.000000000 +0000\nChange: 2025-05-01 10:15:30.000000000 +0000\n Birth: 2025-05-01 10:15:30.000000000 +0000\n```\n\n### Custom format for multiple files\n\n```console\n$ stat -c \"Name: %n, Size: %s bytes, Owner: %U\" *.txt\nName: document.txt, Size: 1024 bytes, Owner: user\nName: notes.txt, Size: 512 bytes, Owner: user\nName: readme.txt, Size: 256 bytes, Owner: user\n```\n\n### File system information\n\n```console\n$ stat -f /\n  File: \"/\"\n    ID: 2f5b04742a3bfad9 Namelen: 255     Type: ext4\nBlock size: 4096       Fundamental block size: 4096\nBlocks: Total: 121211648  Free: 62303156   Available: 56073252\nInodes: Total: 30539776   Free: 29752540\n```\n\n## Tips:\n\n### Get Only Specific Information\n\nUse the `-c` option with format specifiers to extract only the information you need. For example, `stat -c \"%s\" file.txt` will show only the file size.\n\n### Compare File Timestamps\n\nUse `stat` to check when a file was last accessed, modified, or had its metadata changed. This is useful for troubleshooting or verifying file operations.\n\n### Check Inode Information\n\nThe inode number shown by `stat` can help identify if two files are hard-linked to each other (they would share the same inode number).\n\n### Format Specifiers\n\nLearn common format specifiers for `-c` option:\n- `%n`: file name\n- `%s`: total size in bytes\n- `%U`: user name of owner\n- `%G`: group name of owner\n- `%a`: access rights in octal\n- `%x`: time of last access\n- `%y`: time of last modification\n- `%z`: time of last change\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between Modify and Change times?\nA. Modify time (`%y`) is when the file's content was last modified. Change time (`%z`) is when the file's metadata (permissions, ownership, etc.) was last changed.\n\n#### Q2. How can I see only the file size?\nA. Use `stat -c \"%s\" filename` to display only the file size in bytes.\n\n#### Q3. How do I check disk space with stat?\nA. Use `stat -f /path/to/filesystem` to see filesystem information including total, free, and available space.\n\n#### Q4. What's the difference between stat and ls -l?\nA. `stat` provides more detailed metadata about files, including exact timestamps and inode information, while `ls -l` gives a more concise summary of file attributes.\n\n## macOS Considerations\n\nOn macOS, the `stat` command has different syntax and options compared to GNU/Linux. The format option uses `-f` instead of `-c`, and the format specifiers are different:\n\n```console\n$ stat -f \"Name: %N, Size: %z bytes, Owner: %Su\" file.txt\nName: file.txt, Size: 1024 bytes, Owner: user\n```\n\nCommon macOS format specifiers:\n- `%N`: file name\n- `%z`: size in bytes\n- `%Su`: user name of owner\n- `%Sg`: group name of owner\n- `%Sp`: file permissions\n- `%a`: last access time\n- `%m`: last modification time\n- `%c`: last status change time\n\n## References\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/stat-invocation.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 1708
  }
}