{
  "id": "msg_01T1yqXrf2ua2eucjk9uHKki",
  "content": [
    {
      "text": "# git-branch command\n\nList, create, or delete branches in a Git repository.\n\n## Overview\n\nThe `git branch` command manages branches in a Git repository. It allows you to create new branches, list existing ones, rename branches, and delete branches that are no longer needed. Branches are lightweight pointers to commits that enable parallel development workflows.\n\n## Options\n\n### **-a, --all**\n\nList both remote-tracking branches and local branches.\n\n```console\n$ git branch -a\n* main\n  feature-login\n  remotes/origin/main\n  remotes/origin/feature-login\n```\n\n### **-d, --delete**\n\nDelete a branch. The branch must be fully merged in its upstream branch, or in HEAD if no upstream was set.\n\n```console\n$ git branch -d feature-done\nDeleted branch feature-done (was 3e563c4).\n```\n\n### **-D**\n\nForce delete a branch, even if it contains unmerged changes.\n\n```console\n$ git branch -D feature-incomplete\nDeleted branch feature-incomplete (was 7d9f12a).\n```\n\n### **-m, --move**\n\nMove/rename a branch and its reflog.\n\n```console\n$ git branch -m old-name new-name\n```\n\n### **-r, --remotes**\n\nList remote-tracking branches only.\n\n```console\n$ git branch -r\n  origin/main\n  origin/feature-login\n  origin/dev\n```\n\n### **-v, --verbose**\n\nShow SHA-1 and commit subject line for each branch.\n\n```console\n$ git branch -v\n* main       a72f324 Update README.md\n  feature-ui 8d3e5c1 Add new button component\n```\n\n### **--merged**\n\nList branches that have been merged into the current branch.\n\n```console\n$ git branch --merged\n* main\n  feature-complete\n```\n\n### **--no-merged**\n\nList branches that have not been merged into the current branch.\n\n```console\n$ git branch --no-merged\n  feature-in-progress\n  experimental\n```\n\n## Usage Examples\n\n### Creating a new branch\n\n```console\n$ git branch new-feature\n$ git branch\n* main\n  new-feature\n```\n\n### Creating and switching to a new branch\n\n```console\n$ git branch feature-login\n$ git checkout feature-login\nSwitched to branch 'feature-login'\n\n# Or more concisely with git checkout -b\n$ git checkout -b feature-login\nSwitched to a new branch 'feature-login'\n```\n\n### Deleting multiple branches\n\n```console\n$ git branch -d feature-1 feature-2 feature-3\nDeleted branch feature-1 (was 3e563c4).\nDeleted branch feature-2 (was 7d9f12a).\nDeleted branch feature-3 (was 2f5e8b9).\n```\n\n### Listing branches with more information\n\n```console\n$ git branch -vv\n* main            a72f324 [origin/main] Update README.md\n  feature-ui      8d3e5c1 [origin/feature-ui: ahead 2] Add new button component\n  feature-api     3f5d9a2 [origin/feature-api: behind 3] Implement API client\n```\n\n## Tips\n\n### Use Descriptive Branch Names\n\nUse clear, descriptive branch names that indicate the purpose of the branch, such as `feature/login`, `bugfix/header`, or `refactor/auth-system`.\n\n### Clean Up Merged Branches\n\nRegularly delete branches that have been merged to keep your repository clean:\n```console\n$ git branch --merged | grep -v \"\\*\" | xargs git branch -d\n```\n\n### Track Remote Branches\n\nWhen working with remote branches, use `git branch --track branch-name origin/branch-name` to set up tracking, or more simply `git checkout --track origin/branch-name`.\n\n### View Branch History\n\nTo see the commit history of a specific branch, use:\n```console\n$ git log branch-name\n```\n\n## Frequently Asked Questions\n\n#### Q1. How do I create a new branch?\nA. Use `git branch branch-name` to create a branch, then `git checkout branch-name` to switch to it. Alternatively, use `git checkout -b branch-name` to create and switch in one command.\n\n#### Q2. How do I delete a branch?\nA. Use `git branch -d branch-name` to delete a branch that has been merged, or `git branch -D branch-name` to force delete a branch regardless of its merge status.\n\n#### Q3. How do I rename a branch?\nA. Use `git branch -m old-name new-name` to rename a branch. If you're currently on the branch you want to rename, you can simply use `git branch -m new-name`.\n\n#### Q4. How do I see which branches are merged?\nA. Use `git branch --merged` to see branches that have been merged into the current branch, and `git branch --no-merged` to see branches that haven't been merged yet.\n\n#### Q5. How do I push a new local branch to a remote repository?\nA. Use `git push -u origin branch-name` to push a local branch to the remote repository and set up tracking.\n\n## References\n\nhttps://git-scm.com/docs/git-branch\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 2914,
    "output_tokens": 1259
  }
}