{
  "id": "msg_01SyLvjwzFQGULvhst4LgEZh",
  "content": [
    {
      "text": "# set command\n\nDisplay or set shell options and positional parameters.\n\n## Overview\n\nThe `set` command is used to display or modify shell options and positional parameters. Without arguments, it displays all shell variables. With options, it changes shell behavior by enabling or disabling various features. It can also be used to set positional parameters ($1, $2, etc.) for the current shell.\n\n## Options\n\n### **-e**\n\nExit immediately if a command exits with a non-zero status.\n\n```console\n$ set -e\n$ non_existent_command\nbash: non_existent_command: command not found\n$ echo \"This won't be executed\"\n[Shell has already exited due to the previous error]\n```\n\n### **-x**\n\nPrint commands and their arguments as they are executed (trace mode).\n\n```console\n$ set -x\n$ echo \"Hello World\"\n+ echo 'Hello World'\nHello World\n```\n\n### **-u**\n\nTreat unset variables as an error when substituting.\n\n```console\n$ set -u\n$ echo $UNDEFINED_VARIABLE\nbash: UNDEFINED_VARIABLE: unbound variable\n```\n\n### **-o pipefail**\n\nReturn value of a pipeline is the status of the last command to exit with a non-zero status, or zero if no command exited with a non-zero status.\n\n```console\n$ set -o pipefail\n$ false | true\n$ echo $?\n1\n```\n\n### **-**\n\nTurn off the -x and -v options.\n\n```console\n$ set -x  # Enable tracing\n$ echo \"With tracing\"\n+ echo 'With tracing'\nWith tracing\n$ set -    # Disable tracing\n$ echo \"Without tracing\"\nWithout tracing\n```\n\n### **--**\n\nEnd option processing. Remaining arguments become positional parameters.\n\n```console\n$ set -- arg1 arg2 arg3\n$ echo $1 $2 $3\narg1 arg2 arg3\n```\n\n## Usage Examples\n\n### Setting positional parameters\n\n```console\n$ set -- \"first argument\" \"second argument\" \"third argument\"\n$ echo $1\nfirst argument\n$ echo $2\nsecond argument\n$ echo $3\nthird argument\n```\n\n### Enabling multiple options at once\n\n```console\n$ set -exu\n$ echo \"This command is traced and the script will exit on errors or unset variables\"\n+ echo 'This command is traced and the script will exit on errors or unset variables'\nThis command is traced and the script will exit on errors or unset variables\n```\n\n### Displaying all shell variables\n\n```console\n$ set | head -5\nBASH=/bin/bash\nBASHOPTS=checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquote:force_fignore:histappend:interactive_comments:progcomp:promptvars:sourcepath\nBASH_ALIASES=()\nBASH_ARGC=()\nBASH_ARGV=()\n```\n\n## Tips:\n\n### Use in Shell Scripts\n\nAdding `set -e` at the beginning of shell scripts is a good practice to make scripts fail fast when errors occur rather than continuing with potentially incorrect execution.\n\n### Debugging Scripts\n\nWhen troubleshooting shell scripts, `set -x` is invaluable for seeing exactly what commands are being executed and with what values.\n\n### Safer Scripts\n\nThe combination `set -euo pipefail` is commonly used to create more robust shell scripts by failing on errors, unset variables, and pipeline failures.\n\n### Resetting Options\n\nUse `set +x` to turn off tracing that was enabled with `set -x`. The plus sign disables options that were enabled with the minus sign.\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `set` and `export`?\nA. `set` displays/modifies shell options and positional parameters, while `export` makes variables available to child processes.\n\n#### Q2. How do I turn off an option that I've set?\nA. Use the `+` symbol instead of `-`. For example, `set +x` turns off tracing that was enabled with `set -x`.\n\n#### Q3. How can I see all current shell variables?\nA. Simply run `set` without any arguments to display all shell variables.\n\n#### Q4. What does `set -e` do?\nA. It makes the shell exit immediately if any command exits with a non-zero status (indicating an error).\n\n## References\n\nhttps://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 1076
  }
}