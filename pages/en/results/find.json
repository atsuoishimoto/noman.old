{
  "id": "msg_01529GsRsthTXNHJssXkK5oN",
  "content": [
    {
      "text": "# find command\n\nSearch for files in a directory hierarchy.\n\n## Overview\n\nThe `find` command searches for files in a directory hierarchy based on various criteria such as name, type, size, or modification time. It's a powerful tool for locating files and executing operations on the matching results.\n\n## Options\n\n### **-iname**\n\nPerforms a case-insensitive search for files matching the specified pattern. Similar to `-name` but ignores case differences.\n\n```console\n$ find . -iname \"*.txt\"\n./notes.txt\n./Documents/README.txt\n./projects/readme.TXT\n```\n\n### **-name**\n\nSearches for files matching the specified pattern (case-sensitive).\n\n```console\n$ find . -name \"*.txt\"\n./notes.txt\n./Documents/README.txt\n```\n\n### **-type**\n\nSearches for files of a specific type. Common types include:\n- `f` (regular file)\n- `d` (directory)\n- `l` (symbolic link)\n\n```console\n$ find . -type f -name \"*.jpg\"\n./photos/vacation.jpg\n./profile.jpg\n```\n\n### **-size**\n\nSearches for files based on their size.\n- `+n` (larger than n)\n- `-n` (smaller than n)\n- `n` (exactly n)\n\nUnits: `c` (bytes), `k` (kilobytes), `M` (megabytes), `G` (gigabytes)\n\n```console\n$ find . -size +10M\n./videos/tutorial.mp4\n./backups/archive.zip\n```\n\n### **-mtime**\n\nSearches for files based on their modification time in days.\n- `+n` (more than n days ago)\n- `-n` (less than n days ago)\n- `n` (exactly n days ago)\n\n```console\n$ find . -mtime -7\n./documents/recent_report.pdf\n./notes.txt\n```\n\n### **-exec**\n\nExecutes a command on each matching file.\n\n```console\n$ find . -name \"*.log\" -exec rm {} \\;\n```\n\n## Usage Examples\n\n### Finding files with a specific extension regardless of case\n\n```console\n$ find /home/user -iname \"*.jpg\"\n/home/user/Pictures/vacation.jpg\n/home/user/Downloads/photo.JPG\n/home/user/Documents/scan.Jpg\n```\n\n### Finding and deleting temporary files\n\n```console\n$ find /tmp -name \"temp*\" -type f -exec rm {} \\;\n```\n\n### Finding large files modified in the last week\n\n```console\n$ find /home -type f -size +100M -mtime -7\n/home/user/Downloads/movie.mp4\n/home/user/Documents/presentation.pptx\n```\n\n### Finding empty directories\n\n```console\n$ find /var/log -type d -empty\n/var/log/old\n/var/log/archive/2024\n```\n\n## Tips:\n\n### Use Wildcards Carefully\n\nWhen using patterns with `-name` or `-iname`, remember to quote the pattern to prevent shell expansion: `find . -name \"*.txt\"` not `find . -name *.txt`.\n\n### Limit Directory Depth\n\nUse `-maxdepth` to limit how deep `find` will search, which can significantly improve performance: `find . -maxdepth 2 -name \"*.log\"`.\n\n### Combine Multiple Conditions\n\nUse `-a` (AND, default), `-o` (OR), and `!` or `-not` (NOT) to create complex search criteria: `find . -name \"*.jpg\" -a -size +1M`.\n\n### Avoid Permission Denied Messages\n\nRedirect error messages to `/dev/null` to suppress \"Permission denied\" errors: `find / -name \"file.txt\" 2>/dev/null`.\n\n## Frequently Asked Questions\n\n#### Q1. How do I find files by name ignoring case?\nA. Use the `-iname` option: `find . -iname \"pattern\"`.\n\n#### Q2. How can I find files modified within the last 24 hours?\nA. Use `-mtime -1`: `find . -mtime -1`.\n\n#### Q3. How do I find and delete files in one command?\nA. Use the `-exec` option: `find . -name \"pattern\" -exec rm {} \\;`.\n\n#### Q4. What's the difference between `-iname` and `-name`?\nA. `-iname` performs a case-insensitive search, while `-name` is case-sensitive.\n\n#### Q5. How can I make find search only the current directory without subdirectories?\nA. Use `-maxdepth 1`: `find . -maxdepth 1 -name \"pattern\"`.\n\n## References\n\nhttps://www.gnu.org/software/findutils/manual/html_node/find_html/index.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 2805,
    "output_tokens": 1158
  }
}