{
  "id": "msg_01FUC4bDsTNt9x1TzqxcYTi6",
  "content": [
    {
      "text": "# ip command\n\nNetwork configuration tool for managing interfaces, routing, and addresses.\n\n## Overview\n\nThe `ip` command is a powerful utility for configuring and monitoring network interfaces, routing tables, and addresses in Linux systems. It's part of the iproute2 package and provides more functionality than older networking commands like ifconfig, route, and netstat. The command follows a structured syntax where objects (link, address, route, etc.) are followed by commands and options.\n\n## Options\n\n### **help**\n\nDisplay help information for a specific object\n\n```console\n$ ip help\nUsage: ip [ OPTIONS ] OBJECT { COMMAND | help }\n       ip [ -force ] -batch filename\nwhere  OBJECT := { link | address | addrlabel | route | rule | neigh | ntable |\n                   tunnel | tuntap | maddress | mroute | mrule | monitor | xfrm |\n                   netns | l2tp | fou | macsec | tcp_metrics | token | netconf | ila |\n                   vrf | sr | nexthop | mptcp }\n       OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] | -r[esolve] |\n                    -h[uman-readable] | -iec | -j[son] | -p[retty] |\n                    -f[amily] { inet | inet6 | mpls | bridge | link } |\n                    -4 | -6 | -I | -D | -M | -B | -0 |\n                    -l[oops] { maximum-addr-flush-attempts } | -br[ief] |\n                    -o[neline] | -t[imestamp] | -ts[hort] | -b[atch] [filename] |\n                    -rc[vbuf] [size] | -n[etns] name | -N[umeric] | -a[ll] |\n                    -c[olor]}\n```\n\n### **-s, --stats, --statistics**\n\nDisplay more information/statistics\n\n```console\n$ ip -s link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    RX: bytes  packets  errors  dropped overrun mcast   \n    3800       38       0       0       0       0       \n    TX: bytes  packets  errors  dropped carrier collsns \n    3800       38       0       0       0       0       \n```\n\n### **-d, --details**\n\nDisplay detailed information\n\n```console\n$ ip -d link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 promiscuity 0 minmtu 0 maxmtu 0 \n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n```\n\n### **-h, --human, --human-readable**\n\nDisplay statistics in human-readable format\n\n```console\n$ ip -h -s link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    RX: bytes  packets  errors  dropped overrun mcast   \n    3.8K       38       0       0       0       0       \n    TX: bytes  packets  errors  dropped carrier collsns \n    3.8K       38       0       0       0       0       \n```\n\n### **-br, --brief**\n\nDisplay brief output\n\n```console\n$ ip -br address show\nlo               UNKNOWN        127.0.0.1/8 ::1/128 \neth0             UP             192.168.1.100/24 fe80::a00:27ff:fe74:ddaa/64\n```\n\n### **-c, --color**\n\nUse color output\n\n```console\n$ ip -c link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n```\n\n## Usage Examples\n\n### Displaying network interfaces\n\n```console\n$ ip link show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000\n    link/ether 08:00:27:74:dd:aa brd ff:ff:ff:ff:ff:ff\n```\n\n### Displaying IP addresses\n\n```console\n$ ip address show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:74:dd:aa brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.100/24 brd 192.168.1.255 scope global dynamic eth0\n       valid_lft 86389sec preferred_lft 86389sec\n    inet6 fe80::a00:27ff:fe74:ddaa/64 scope link \n       valid_lft forever preferred_lft forever\n```\n\n### Adding an IP address to an interface\n\n```console\n$ sudo ip address add 192.168.1.200/24 dev eth0\n```\n\n### Bringing an interface up or down\n\n```console\n$ sudo ip link set eth0 up\n$ sudo ip link set eth0 down\n```\n\n### Displaying routing table\n\n```console\n$ ip route show\ndefault via 192.168.1.1 dev eth0 proto dhcp metric 100 \n192.168.1.0/24 dev eth0 proto kernel scope link src 192.168.1.100 metric 100 \n```\n\n### Adding a static route\n\n```console\n$ sudo ip route add 10.0.0.0/24 via 192.168.1.254\n```\n\n## Tips:\n\n### Use Brief Output for Quick Overview\n\nThe `-br` option provides a concise, tabular view of network information, making it easier to scan multiple interfaces quickly.\n\n```console\n$ ip -br link\nlo               UNKNOWN        00:00:00:00:00:00 <LOOPBACK,UP,LOWER_UP> \neth0             UP             08:00:27:74:dd:aa <BROADCAST,MULTICAST,UP,LOWER_UP>\n```\n\n### Save and Restore IP Configuration\n\nYou can save your current IP configuration to a file and restore it later:\n\n```console\n$ ip addr save > ip-config.txt\n$ ip addr restore < ip-config.txt\n```\n\n### Monitor Network Changes\n\nUse the `ip monitor` command to watch for network changes in real-time:\n\n```console\n$ ip monitor\n```\n\n### Use Namespaces for Network Isolation\n\nNetwork namespaces allow you to create isolated network environments:\n\n```console\n$ sudo ip netns add mynetwork\n$ sudo ip netns exec mynetwork ip link list\n```\n\n## Frequently Asked Questions\n\n#### Q1. What's the difference between `ip` and `ifconfig`?\nA. `ip` is newer, more powerful, and provides more functionality than `ifconfig`. It can manage routing tables, network interfaces, and IP addresses with a consistent syntax. `ifconfig` is considered deprecated in many Linux distributions.\n\n#### Q2. How do I check my IP address?\nA. Use `ip address show` or the shorter `ip a` to display all IP addresses. For a specific interface, use `ip address show dev eth0`.\n\n#### Q3. How do I add a temporary IP address?\nA. Use `sudo ip address add 192.168.1.200/24 dev eth0` to add an IP address to interface eth0. This address will be lost after reboot unless configured in network configuration files.\n\n#### Q4. How do I flush all IP addresses from an interface?\nA. Use `sudo ip address flush dev eth0` to remove all IP addresses from the eth0 interface.\n\n#### Q5. How do I view my routing table?\nA. Use `ip route show` or the shorter `ip r` to display the routing table.\n\n## References\n\nhttps://man7.org/linux/man-pages/man8/ip.8.html\n\n## Revisions\n\n- 2025/05/05 First revision",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1678,
    "output_tokens": 2369
  }
}