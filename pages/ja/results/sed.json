{
  "id": "msg_01A9rgmse2uwPyJHLS6Kb78N",
  "content": [
    {
      "text": "# sedコマンド\n\nテキストのフィルタリングと変換のためのストリームエディタです。\n\n## 概要\n\n`sed`（ストリームエディタ）は、テキストを行ごとに解析して変換する強力なユーティリティです。ファイルや標準入力からデータを読み取り、指定された編集コマンドを適用し、結果を標準出力に出力します。元のファイルを変更せずに、検索と置換操作、テキスト抽出、その他のテキスト変換によく使用されます。\n\n## オプション\n\n### **-e スクリプト, --expression=スクリプト**\n\nスクリプト内のコマンドを実行するコマンドセットに追加します。\n\n```console\n$ echo \"hello world\" | sed -e 's/hello/hi/' -e 's/world/there/'\nhi there\n```\n\n### **-f スクリプトファイル, --file=スクリプトファイル**\n\nスクリプトファイルからコマンドを実行するコマンドセットに追加します。\n\n```console\n$ cat script.sed\ns/hello/hi/\ns/world/there/\n$ echo \"hello world\" | sed -f script.sed\nhi there\n```\n\n### **-i[接尾辞], --in-place[=接尾辞]**\n\nファイルを直接編集します（接尾辞を指定するとバックアップを作成します）。\n\n```console\n$ echo \"hello world\" > file.txt\n$ sed -i 's/hello/hi/' file.txt\n$ cat file.txt\nhi world\n```\n\n### **-n, --quiet, --silent**\n\nパターンスペースの自動出力を抑制します。\n\n```console\n$ echo -e \"line 1\\nline 2\\nline 3\" | sed -n '2p'\nline 2\n```\n\n### **-r, --regexp-extended**\n\nスクリプトで拡張正規表現を使用します。\n\n```console\n$ echo \"hello 123 world\" | sed -r 's/[0-9]+/NUMBER/'\nhello NUMBER world\n```\n\n## 使用例\n\n### 基本的な置換\n\n```console\n$ echo \"The quick brown fox\" | sed 's/brown/red/'\nThe quick red fox\n```\n\n### グローバル置換\n\n```console\n$ echo \"one two one three one\" | sed 's/one/1/g'\n1 two 1 three 1\n```\n\n### 行の削除\n\n```console\n$ echo -e \"line 1\\nline 2\\nline 3\" | sed '2d'\nline 1\nline 3\n```\n\n### 特定の行の表示\n\n```console\n$ echo -e \"line 1\\nline 2\\nline 3\" | sed -n '2,3p'\nline 2\nline 3\n```\n\n### 複数の編集コマンド\n\n```console\n$ echo \"hello world\" | sed 's/hello/hi/; s/world/there/'\nhi there\n```\n\n## ヒント:\n\n### '/'以外の区切り文字を使用する\n\nスラッシュを含むパスやURLを扱う場合は、別の区切り文字を使用します：\n\n```console\n$ echo \"/usr/local/bin\" | sed 's:/usr:~:g'\n~/local/bin\n```\n\n### インプレース編集前にバックアップを作成する\n\n`-i`を使用してインプレース編集を行う場合は、常にバックアップを作成しましょう：\n\n```console\n$ sed -i.bak 's/old/new/g' file.txt\n```\n\n### アドレス範囲\n\nアドレス範囲を使用して、特定の行にコマンドを適用します：\n- `1,5s/old/new/` - 1〜5行目で置換\n- `/start/,/end/s/old/new/` - パターン間で置換\n\n### 複数行編集\n\n複数行にまたがる複雑な編集には、`-z`オプションを使用してnull終端の行を扱うことを検討してください。\n\n## よくある質問\n\n#### Q1. ファイル内のパターンのすべての出現を置換するにはどうすればよいですか？\nA. グローバルフラグを使用します：`sed 's/pattern/replacement/g' file.txt`\n\n#### Q2. ファイルをインプレース編集するにはどうすればよいですか？\nA. `-i`オプションを使用します：`sed -i 's/pattern/replacement/g' file.txt`\n\n#### Q3. ファイルから特定の行を削除するにはどうすればよいですか？\nA. 削除コマンドを使用します：`sed '5d' file.txt`（5行目を削除）または`sed '/pattern/d' file.txt`（パターンに一致する行を削除）\n\n#### Q4. ファイルから特定の行を抽出するにはどうすればよいですか？\nA. `-n`と印刷コマンドを使用します：`sed -n '10,20p' file.txt`（10〜20行目を表示）\n\n#### Q5. 複数のsedコマンドを使用するにはどうすればよいですか？\nA. 各コマンドに`-e`を使用するか：`sed -e 'cmd1' -e 'cmd2'`、またはセミコロンでコマンドを区切ります：`sed 'cmd1; cmd2'`\n\n## 参考文献\n\nhttps://www.gnu.org/software/sed/manual/sed.html\n\n## 改訂履歴\n\n- 2025/05/05 初版",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1249,
    "output_tokens": 1547
  }
}