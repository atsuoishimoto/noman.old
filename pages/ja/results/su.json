{
  "id": "msg_01L7SP3NWUiSrXDEe8eKecgB",
  "content": [
    {
      "text": "# su コマンド\n\nユーザーIDを切り替えたり、別のユーザーになったりするコマンドです。\n\n## 概要\n\n`su` コマンドを使用すると、ログインセッション中に一時的に別のユーザーになることができます。ユーザー名を指定しない場合、デフォルトではスーパーユーザー（root）に切り替わります。このコマンドは、対象ユーザーの環境変数と権限を持つ新しいシェルを作成します。\n\n## オプション\n\n### **-**, **-l**, **--login**\n\nログイン環境を提供し、対象ユーザーとして直接ログインしたかのように動作します。これには環境変数の設定、対象ユーザーのホームディレクトリへの移動、ログインスクリプトの実行が含まれます。\n\n```console\n$ su - john\nPassword: \njohn@hostname:~$\n```\n\n### **-c**, **--command=COMMAND**\n\n指定したユーザーとして単一のコマンドを実行し、その後終了します。\n\n```console\n$ su -c \"ls -la /root\" root\nPassword: \ntotal 28\ndrwx------  4 root root 4096 May  5 10:15 .\ndrwxr-xr-x 20 root root 4096 May  5 10:15 ..\n-rw-------  1 root root  571 May  5 10:15 .bash_history\n-rw-r--r--  1 root root 3106 May  5 10:15 .bashrc\ndrwx------  2 root root 4096 May  5 10:15 .cache\n-rw-r--r--  1 root root  161 May  5 10:15 .profile\ndrwx------  2 root root 4096 May  5 10:15 .ssh\n```\n\n### **-s**, **--shell=SHELL**\n\n対象ユーザーのデフォルトシェルの代わりに、指定したシェルを実行します。\n\n```console\n$ su -s /bin/zsh john\nPassword: \njohn@hostname:~$\n```\n\n### **-p**, **--preserve-environment**\n\n対象ユーザーの環境変数に切り替えるのではなく、現在の環境変数を保持します。\n\n```console\n$ su -p john\nPassword: \njohn@hostname:/current/directory$\n```\n\n## 使用例\n\n### rootユーザーになる\n\n```console\n$ su\nPassword: \nroot@hostname:/home/user#\n```\n\n### rootとしてコマンドを実行し、通常ユーザーに戻る\n\n```console\n$ su -c \"apt update && apt upgrade\" root\nPassword: \n[apt update and upgrade output]\n$\n```\n\n### ログイン環境を持つ別のユーザーに切り替える\n\n```console\n$ su - john\nPassword: \njohn@hostname:~$\n```\n\n## ヒント:\n\n### 可能な場合は sudo を使用する\n\n最近のシステムでは、管理タスクには `su` よりも `sudo` を使用することが推奨されています。`sudo` はより良いログ記録と、より細かい権限制御を提供します。\n\n### 環境変数に注意する\n\n`-` オプションなしで `su` を使用すると、現在の環境変数が保持され、予期しない動作を引き起こす可能性があります。クリーンな環境のためには `-` を使用してください。\n\n### suセッションを適切に終了する\n\n特権セッションが終了したら、`exit` と入力するか Ctrl+D を押して、元のユーザーセッションに戻ります。\n\n### rootとしてコマンドを実行する前に確認する\n\nrootとしてコマンドを実行する前には、常に二重確認してください。ミスがあるとシステムを損傷する可能性があります。\n\n## よくある質問\n\n#### Q1. `su` と `sudo` の違いは何ですか？\nA. `su` はユーザーセッション全体を別のユーザー（通常はroot）に切り替えますが、`sudo` は特権を持つ単一のコマンドを実行した後、通常のユーザーに戻ります。\n\n#### Q2. なぜ `su` はパスワードを要求するのですか？\nA. `su` は切り替え先のユーザーのパスワードを要求します。これは自分自身のパスワードを要求する `sudo` とは異なります。\n\n#### Q3. `su` セッションからどうやって抜け出しますか？\nA. `exit` と入力するか Ctrl+D を押すと、元のユーザーセッションに戻ります。\n\n#### Q4. 単に `su` ではなく `su -` を使用する理由は何ですか？\nA. `su -` は対象ユーザーの完全なログイン環境を提供します。これには環境変数、作業ディレクトリ、シェル設定が含まれます。単なる `su` はユーザーIDのみを変更し、現在の環境を保持します。\n\n## 参考文献\n\nhttps://www.gnu.org/software/coreutils/manual/html_node/su-invocation.html\n\n## 改訂履歴\n\n- 2025/05/05 初版",
      "type": "text"
    }
  ],
  "model": "claude-3-7-sonnet-20250219",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 1112,
    "output_tokens": 1499
  }
}